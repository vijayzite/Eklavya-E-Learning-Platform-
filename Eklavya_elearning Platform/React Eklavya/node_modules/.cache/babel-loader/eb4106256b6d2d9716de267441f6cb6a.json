{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SUSH\\\\Desktop\\\\Project Major\\\\Project2\\\\React Eklavya\\\\src\\\\screens\\\\ChatBot.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useRef } from \"react\";\nimport \"./ChatBot.css\";\nimport image from \"../assets/images/botimage.jpg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ChatBot() {\n  _s();\n\n  const humanMessage = useRef();\n  const botmessage = useRef();\n  const input = useRef();\n  const date = new Date();\n  const hours = date.getHours();\n  const seconds = date.getSeconds();\n  const day = date.getDay();\n  const month = date.getMonth();\n  const year = date.getFullYear();\n  const days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n  const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n  const [time, setTime] = useState(`${hours}:${seconds}`); //using the useState hook to get the data from the local time and set it to the time variable\n\n  const [dateTime, setDateTime] = useState(`${days[day]}, ${months[month]} ${year}`); //using the useState hook to get the data from the local date and set it to the dateTime variable\n\n  const checkStatus = e => {\n    let isActive = true;\n\n    if (dateTime === \"Thursday, Aug 13 2022\") {\n      //if the dateTime is Thursday, 13 Aug 2022, the bot will be inactive\n      isActive = false;\n    }\n\n    const status = document.querySelector(\".status\"); // selecting the status class\n\n    if (isActive === true) {\n      //if the bot is active\n      status.innerHTML = \"Active\";\n      status.style.color = \"green\";\n    } else {\n      status.innerHTML = \"Not Active\";\n      status.style.color = \"red\";\n    }\n  };\n\n  const handleInput = () => {\n    const botMessage = document.querySelector(\"#message1\");\n    const userMessage = document.querySelector(\"#message2\");\n    const inputRef = input.current;\n    const getHumanMessage = humanMessage.current;\n    const getBotMessage = botmessage.current;\n    let badwords = [\"fuck|bad|stupid|useless|bitch|crazy|nonsense\"];\n    let words = new RegExp(badwords);\n\n    if (words.test(document.querySelector(\"#input\").value)) {\n      // if the input contains bad words\n      getBotMessage.innerText = \"Typing...\";\n      setTimeout(() => {\n        getBotMessage.innerText = \"Please do not use bad words\"; // display the message\n\n        inputRef.value = \"\"; // clear the input\n      }, 2000);\n    }\n\n    let welcome = [\"hi|hello|Hello|hey|sup|yo|wassup|whats up|howdy|greetings|good morning|good afternoon|good evening\"];\n    let words2 = new RegExp(welcome);\n\n    if (words2.test(document.querySelector(\"#input\").value)) {\n      const status = document.querySelector(\".status\"); // if the input contains welcome words\n\n      getBotMessage.innerText = \"Typing...\";\n      setTimeout(() => {\n        getBotMessage.innerText = \"Hello There how are you doing today?\"; // display the message\n\n        status.innerText = \"Active\";\n        status.style.color = \"green\";\n        inputRef.value = \"\"; // clear the input\n      }, 2000);\n    }\n\n    let bye = [\"bye|Bye|goodbye|see you later|cya|goodnight|goodbye\"];\n    let words3 = new RegExp(bye);\n\n    if (words3.test(document.querySelector(\"#input\").value)) {\n      const status = document.querySelector(\".status\");\n      getBotMessage.innerText = \"Typing...\";\n      setTimeout(() => {\n        getBotMessage.innerText = \"Bye, have a nice day\";\n        inputRef.value = \"\"; // clear the input\n      }, 2000);\n      setTimeout(() => {\n        status.innerText = \"Not active\";\n        status.style.color = \"red\";\n      }, 5000);\n    }\n\n    let thanks = [\"Thanks|thanks|thank you|thank you very much|Thank you very much\"];\n    let words4 = new RegExp(thanks);\n\n    if (words4.test(document.querySelector(\"#input\").value)) {\n      getBotMessage.innerText = \"Typing...\";\n      setTimeout(() => {\n        getBotMessage.innerText = \"You are welcome\";\n        inputRef.value = \"\"; // clear the input\n      }, 2000);\n    }\n\n    let how = [\"How are you|how are you doing|how are you doing today|how are you doing today|How are you|how are you\"];\n    let words5 = new RegExp(how);\n\n    if (words5.test(document.querySelector(\"#input\").value)) {\n      const status = document.querySelector(\".status\");\n      getBotMessage.innerText = \"Typing...\";\n      setTimeout(() => {\n        getBotMessage.innerText = \"I am fine, thank you\";\n        status.innerText = \"Active\";\n        status.style.color = \"green\";\n        inputRef.value = \"\"; // clear the input\n      }, 2000);\n    }\n\n    let good = [\"That's good|Sound nice|that sounds awesome|that sounds great|Great|great|sounds great|that's sounds good|Nice|nice\"];\n    let words6 = new RegExp(good);\n\n    if (words6.test(document.querySelector(\"#input\").value)) {\n      getBotMessage.innerText = \"Typing...\";\n      setTimeout(() => {\n        getBotMessage.innerText = \"😁\";\n        inputRef.value = \"\"; // clear the input\n      }, 1000);\n    }\n\n    let response = [\"I'm fine|I am fine|I am fine today|I am fine today|i'm fine|i'm great|I'm fine|I'm great|I'm good|i'm good|great|Great\"];\n    let words7 = new RegExp(response);\n\n    if (words7.test(document.querySelector(\"#input\").value)) {\n      getBotMessage.innerText = \"Typing...\";\n      setTimeout(() => {\n        getBotMessage.innerText = \"That is good\";\n        inputRef.value = \"\"; // clear the input\n      }, 2000);\n    }\n\n    let nameAsk = [\"What's your name|what's your name|What is your name|what is your name\"];\n    let words8 = new RegExp(nameAsk);\n\n    if (words8.test(document.querySelector(\"#input\").value)) {\n      getBotMessage.innerText = \"Typing...\";\n      setTimeout(() => {\n        getBotMessage.innerText = \"My name is Bot\";\n        inputRef.value = \"\"; // clear the input\n      }, 2000);\n    }\n\n    let owner = [\"Who is the owner|who is the owner|Who is the owner of this bot|who is the owner of this bot|Who made you|who made you|Who is your maker|Who made you|who is your maker|who is your owner|Who is your owner\"];\n    let words9 = new RegExp(owner);\n\n    if (words9.test(document.querySelector(\"#input\").value)) {\n      getBotMessage.innerText = \"Typing...\";\n      setTimeout(() => {\n        getBotMessage.innerText = \"The owner of this bot is Treasure\";\n        inputRef.value = \"\"; // clear the input\n      }, 2000);\n    }\n\n    let owner2 = [\"Who's Treasure|who's Treasure|Who is Treasure|who is Treasure\"];\n    let words10 = new RegExp(owner2);\n\n    if (words10.test(document.querySelector(\"#input\").value)) {\n      getBotMessage.innerText = \"Typing...\";\n      setTimeout(() => {\n        getBotMessage.innerText = \"Treasure is a programmer based on ReactJS and NodeJS he is the owner of a youtube channel called Creative Tutorials\";\n        inputRef.value = \"\"; // clear the input\n      }, 2000);\n    }\n\n    let ageAsk = [\"What's your age|what's your age|What is your age|what is your age|How old are you|how old are you\"]; //adding the age-question\n\n    let words11 = new RegExp(ageAsk);\n\n    if (words11.test(document.querySelector(\"#input\").value)) {\n      // if the input contains some question\n      getBotMessage.innerText = \"Typing...\";\n      setTimeout(() => {\n        getBotMessage.innerText = \"I am 1 year old\";\n        inputRef.value = \"\"; // clear the input\n      }, 2000);\n    }\n\n    getHumanMessage.innerText = inputRef.value; // display the message\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    onLoad: checkStatus,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"img\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: image,\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"right\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"name\",\n              children: \"ChatBot\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"status\",\n              children: \"Active\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"main\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"main_content\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"messages\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"bot-message\",\n                id: \"message1\",\n                ref: botmessage\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"human-message\",\n                id: \"message2\",\n                ref: humanMessage\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bottom\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"btm\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"input\",\n                placeholder: \"Enter your message\",\n                ref: input\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"btn\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handleInput,\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fas fa-paper-plane\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 250,\n                  columnNumber: 19\n                }, this), \"Send\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 210,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ChatBot, \"6v0bSWcspbSh3jbw7HltZfTK7qE=\");\n\n_c = ChatBot;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatBot\");","map":{"version":3,"names":["React","useState","useRef","image","ChatBot","humanMessage","botmessage","input","date","Date","hours","getHours","seconds","getSeconds","day","getDay","month","getMonth","year","getFullYear","days","months","time","setTime","dateTime","setDateTime","checkStatus","e","isActive","status","document","querySelector","innerHTML","style","color","handleInput","botMessage","userMessage","inputRef","current","getHumanMessage","getBotMessage","badwords","words","RegExp","test","value","innerText","setTimeout","welcome","words2","bye","words3","thanks","words4","how","words5","good","words6","response","words7","nameAsk","words8","owner","words9","owner2","words10","ageAsk","words11"],"sources":["C:/Users/SUSH/Desktop/Project Major/Project2/React Eklavya/src/screens/ChatBot.jsx"],"sourcesContent":["import React from 'react'\r\nimport { useState, useRef } from \"react\";\r\nimport \"./ChatBot.css\";\r\nimport image from \"../assets/images/botimage.jpg\";\r\n\r\nexport default function ChatBot() {\r\n  const humanMessage = useRef();\r\n  const botmessage = useRef();\r\n  const input = useRef();\r\n\r\n  const date = new Date();\r\n  const hours = date.getHours();\r\n  const seconds = date.getSeconds();\r\n  const day = date.getDay();\r\n  const month = date.getMonth();\r\n  const year = date.getFullYear();\r\n\r\n  const days = [\r\n    \"Sunday\",\r\n    \"Monday\",\r\n    \"Tuesday\",\r\n    \"Wednesday\",\r\n    \"Thursday\",\r\n    \"Friday\",\r\n    \"Saturday\",\r\n  ];\r\n  const months = [\r\n    \"January\",\r\n    \"February\",\r\n    \"March\",\r\n    \"April\",\r\n    \"May\",\r\n    \"June\",\r\n    \"July\",\r\n    \"August\",\r\n    \"September\",\r\n    \"October\",\r\n    \"November\",\r\n    \"December\",\r\n  ];\r\n  const [time, setTime] = useState(`${hours}:${seconds}`); //using the useState hook to get the data from the local time and set it to the time variable\r\n  const [dateTime, setDateTime] = useState(\r\n    `${days[day]}, ${months[month]} ${year}`\r\n  ); //using the useState hook to get the data from the local date and set it to the dateTime variable\r\n\r\n  const checkStatus = (e) => {\r\n    let isActive = true;\r\n    if (dateTime === \"Thursday, Aug 13 2022\") {\r\n      //if the dateTime is Thursday, 13 Aug 2022, the bot will be inactive\r\n      isActive = false;\r\n    }\r\n    const status = document.querySelector(\".status\");\r\n    // selecting the status class\r\n    if (isActive === true) {\r\n      //if the bot is active\r\n      status.innerHTML = \"Active\";\r\n      status.style.color = \"green\";\r\n    } else {\r\n      status.innerHTML = \"Not Active\";\r\n      status.style.color = \"red\";\r\n    }\r\n  };\r\n  const handleInput = () => {\r\n    const botMessage = document.querySelector(\"#message1\");\r\n    const userMessage = document.querySelector(\"#message2\");\r\n    const inputRef = input.current;\r\n    const getHumanMessage = humanMessage.current;\r\n    const getBotMessage = botmessage.current;\r\n\r\n    let badwords = [\"fuck|bad|stupid|useless|bitch|crazy|nonsense\"];\r\n    let words = new RegExp(badwords);\r\n    if (words.test(document.querySelector(\"#input\").value)) {\r\n      // if the input contains bad words\r\n      getBotMessage.innerText = \"Typing...\";\r\n      setTimeout(() => {\r\n        getBotMessage.innerText = \"Please do not use bad words\"; // display the message\r\n        inputRef.value = \"\"; // clear the input\r\n      }, 2000);\r\n    }\r\n    let welcome = [\r\n      \"hi|hello|Hello|hey|sup|yo|wassup|whats up|howdy|greetings|good morning|good afternoon|good evening\",\r\n    ];\r\n    let words2 = new RegExp(welcome);\r\n    if (words2.test(document.querySelector(\"#input\").value)) {\r\n      const status = document.querySelector(\".status\");\r\n      // if the input contains welcome words\r\n      getBotMessage.innerText = \"Typing...\";\r\n      setTimeout(() => {\r\n        getBotMessage.innerText = \"Hello There how are you doing today?\"; // display the message\r\n        status.innerText = \"Active\";\r\n        status.style.color = \"green\";\r\n        inputRef.value = \"\"; // clear the input\r\n      }, 2000);\r\n    }\r\n    let bye = [\"bye|Bye|goodbye|see you later|cya|goodnight|goodbye\"];\r\n    let words3 = new RegExp(bye);\r\n    if (words3.test(document.querySelector(\"#input\").value)) {\r\n      const status = document.querySelector(\".status\");\r\n      getBotMessage.innerText = \"Typing...\";\r\n      setTimeout(() => {\r\n        getBotMessage.innerText = \"Bye, have a nice day\";\r\n        inputRef.value = \"\"; // clear the input\r\n      }, 2000);\r\n      setTimeout(() => {\r\n        status.innerText = \"Not active\";\r\n        status.style.color = \"red\";\r\n      }, 5000);\r\n    }\r\n    let thanks = [\r\n      \"Thanks|thanks|thank you|thank you very much|Thank you very much\",\r\n    ];\r\n    let words4 = new RegExp(thanks);\r\n    if (words4.test(document.querySelector(\"#input\").value)) {\r\n      getBotMessage.innerText = \"Typing...\";\r\n      setTimeout(() => {\r\n        getBotMessage.innerText = \"You are welcome\";\r\n        inputRef.value = \"\"; // clear the input\r\n      }, 2000);\r\n    }\r\n    let how = [\r\n      \"How are you|how are you doing|how are you doing today|how are you doing today|How are you|how are you\",\r\n    ];\r\n    let words5 = new RegExp(how);\r\n    if (words5.test(document.querySelector(\"#input\").value)) {\r\n      const status = document.querySelector(\".status\");\r\n      getBotMessage.innerText = \"Typing...\";\r\n      setTimeout(() => {\r\n        getBotMessage.innerText = \"I am fine, thank you\";\r\n        status.innerText = \"Active\";\r\n        status.style.color = \"green\";\r\n        inputRef.value = \"\"; // clear the input\r\n      }, 2000);\r\n    }\r\n    let good = [\r\n      \"That's good|Sound nice|that sounds awesome|that sounds great|Great|great|sounds great|that's sounds good|Nice|nice\",\r\n    ];\r\n    let words6 = new RegExp(good);\r\n    if (words6.test(document.querySelector(\"#input\").value)) {\r\n      getBotMessage.innerText = \"Typing...\";\r\n      setTimeout(() => {\r\n        getBotMessage.innerText = \"😁\";\r\n        inputRef.value = \"\"; // clear the input\r\n      }, 1000);\r\n    }\r\n\r\n    let response = [\r\n      \"I'm fine|I am fine|I am fine today|I am fine today|i'm fine|i'm great|I'm fine|I'm great|I'm good|i'm good|great|Great\",\r\n    ];\r\n    let words7 = new RegExp(response);\r\n    if (words7.test(document.querySelector(\"#input\").value)) {\r\n      getBotMessage.innerText = \"Typing...\";\r\n      setTimeout(() => {\r\n        getBotMessage.innerText = \"That is good\";\r\n        inputRef.value = \"\"; // clear the input\r\n      }, 2000);\r\n    }\r\n\r\n    let nameAsk = [\r\n      \"What's your name|what's your name|What is your name|what is your name\",\r\n    ];\r\n    let words8 = new RegExp(nameAsk);\r\n    if (words8.test(document.querySelector(\"#input\").value)) {\r\n      getBotMessage.innerText = \"Typing...\";\r\n      setTimeout(() => {\r\n        getBotMessage.innerText = \"My name is Bot\";\r\n        inputRef.value = \"\"; // clear the input\r\n      }, 2000);\r\n    }\r\n\r\n    let owner = [\r\n      \"Who is the owner|who is the owner|Who is the owner of this bot|who is the owner of this bot|Who made you|who made you|Who is your maker|Who made you|who is your maker|who is your owner|Who is your owner\",\r\n    ];\r\n    let words9 = new RegExp(owner);\r\n    if (words9.test(document.querySelector(\"#input\").value)) {\r\n      getBotMessage.innerText = \"Typing...\";\r\n      setTimeout(() => {\r\n        getBotMessage.innerText = \"The owner of this bot is Treasure\";\r\n        inputRef.value = \"\"; // clear the input\r\n      }, 2000);\r\n    }\r\n\r\n    let owner2 = [\r\n      \"Who's Treasure|who's Treasure|Who is Treasure|who is Treasure\",\r\n    ];\r\n    let words10 = new RegExp(owner2);\r\n    if (words10.test(document.querySelector(\"#input\").value)) {\r\n      getBotMessage.innerText = \"Typing...\";\r\n      setTimeout(() => {\r\n        getBotMessage.innerText =\r\n          \"Treasure is a programmer based on ReactJS and NodeJS he is the owner of a youtube channel called Creative Tutorials\";\r\n        inputRef.value = \"\"; // clear the input\r\n      }, 2000);\r\n    }\r\n\r\n    let ageAsk = [\r\n      \"What's your age|what's your age|What is your age|what is your age|How old are you|how old are you\",\r\n    ]; //adding the age-question\r\n    let words11 = new RegExp(ageAsk);\r\n    if (words11.test(document.querySelector(\"#input\").value)) {\r\n      // if the input contains some question\r\n      getBotMessage.innerText = \"Typing...\";\r\n      setTimeout(() => {\r\n        getBotMessage.innerText = \"I am 1 year old\";\r\n        inputRef.value = \"\"; // clear the input\r\n      }, 2000);\r\n    }\r\n    getHumanMessage.innerText = inputRef.value; // display the message\r\n  };\r\n  return (\r\n    <div className=\"App\" onLoad={checkStatus}>\r\n      <div className=\"wrapper\">\r\n        <div className=\"content\">\r\n          <div className=\"header\">\r\n            <div className=\"img\">\r\n              <img src={image} alt=\"\" />\r\n            </div>\r\n            <div className=\"right\">\r\n              <div className=\"name\">ChatBot</div>\r\n              <div className=\"status\">Active</div>\r\n            </div>\r\n          </div>\r\n          <div className=\"main\">\r\n            <div className=\"main_content\">\r\n              <div className=\"messages\">\r\n                <div\r\n                  className=\"bot-message\"\r\n                  id=\"message1\"\r\n                  ref={botmessage}\r\n                ></div>\r\n                <div\r\n                  className=\"human-message\"\r\n                  id=\"message2\"\r\n                  ref={humanMessage}\r\n                ></div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"bottom\">\r\n            <div className=\"btm\">\r\n              <div className=\"input\">\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"input\"\r\n                  placeholder=\"Enter your message\"\r\n                  ref={input}\r\n                />\r\n              </div>\r\n              <div className=\"btn\">\r\n                <button onClick={handleInput}>\r\n                  <i className=\"fas fa-paper-plane\"></i>Send\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}