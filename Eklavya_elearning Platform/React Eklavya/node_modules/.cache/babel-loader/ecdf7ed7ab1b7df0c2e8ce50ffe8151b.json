{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SUSH\\\\Desktop\\\\Project Major\\\\Project2\\\\E-learning Backend+Frontend v1.1\\\\frontend-elearning\\\\frontend-elearning\\\\src\\\\screens\\\\RegisterScreen.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport ReCAPTCHA from \"react-google-recaptcha\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Button, Card, CardBody, CardHeader, Col, Container, Form, FormFeedback, FormGroup, Input, Label, Row } from \"reactstrap\";\nimport { logout, register } from \"../actions/userActions\";\nimport { onlyChar, onlyPhone } from \"../data/Regex\";\nimport Select from \"react-select\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction RegisterScreen() {\n  _s();\n\n  const navigate = useNavigate();\n  const [userName, setUserName] = useState(\"\");\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [pass, setPass] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [category, setCategory] = useState({});\n  const [phoneNo, setPhoneNo] = useState(\"\"); // const [message, setMessage] = useState(\"\");\n\n  const dispatch = useDispatch();\n  const userRegister = useSelector(state => state.userRegister);\n  const {\n    error,\n    loading,\n    userInfo\n  } = userRegister;\n  const [pwdError, setPwdError] = useState(false);\n  const [phError, setPhError] = useState(false);\n  const [unameError, setUnameError] = useState(false);\n  const [fnameError, setFnameError] = useState(false);\n  const [lnameError, setLnameError] = useState(false);\n  const [emailError, setEmailError] = useState(false);\n  const [addressError, setAddressError] = useState(false);\n  var flag = true; //   const [items, setItems] = useState([]);\n  // useEffect(() => {\n  //   const items = JSON.parse(localStorage.getItem('items'));\n  //   if (items) {\n  //    setItems(items);\n  //   }\n  // }, []);\n\n  useEffect(() => {\n    if (userInfo) {\n      localStorage.clear();\n      dispatch(logout());\n      navigate(\"/login\");\n    }\n  }, [userInfo, navigate]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    if (!onlyChar.test(userName)) {\n      setUnameError(true);\n      flag = true;\n    }\n\n    if (!onlyChar.test(firstName)) {\n      setFnameError(true);\n      flag = true;\n    }\n\n    if (!onlyChar.test(lastName)) {\n      setLnameError(true);\n      flag = true;\n    }\n\n    if (pass.length < 6) {\n      setPwdError(true);\n      flag = true;\n    }\n\n    if (address.length < 25) {\n      setAddressError(false);\n      flag = true;\n    }\n\n    if (!onlyPhone.test(phoneNo)) {\n      setPhError(true);\n      flag = true;\n    } else {\n      flag = false;\n    }\n\n    console.log(\"flag\", flag);\n\n    if (flag === false) {\n      dispatch(register(userName, firstName, lastName, email, pass, address, phoneNo, category.value));\n    } // setMessage(\"User Register Successfully\");\n\n  };\n\n  const reset = () => {\n    setUserName(\"\");\n    setFirstName(\"\");\n    setLastName(\"\");\n    setAddress(\"\");\n    setPass(\"\");\n    setEmail(\"\");\n    setCategory({});\n    setPhoneNo(\"\"); //err\n\n    setPhError(false);\n    setPwdError(false);\n    setFnameError(false);\n    setLnameError(false);\n    setUnameError(false);\n    setEmailError(false);\n    setAddressError(false);\n  };\n\n  var option = [{\n    value: 2,\n    label: \"Instructor\"\n  }, {\n    value: 3,\n    label: \"Student\"\n  }];\n  const [Verifed, setVerifed] = useState(false);\n\n  function onChange(value) {\n    console.log(\"Captcha value:\", value);\n    setVerifed(true);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"my-5\",\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      className: \"pt-5\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        sm: {\n          size: 6,\n          offset: 3\n        },\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          color: \"dark\",\n          outline: true,\n          children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n            className: \"text-center\",\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Register\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n            children: /*#__PURE__*/_jsxDEV(Form, {\n              onSubmit: submitHandler,\n              children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n                children: [/*#__PURE__*/_jsxDEV(Label, {\n                  for: \"firstName\",\n                  children: \"User Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Input, {\n                  id: \"userName\",\n                  placeholder: \"Enter user name\",\n                  type: \"text\",\n                  value: userName,\n                  onChange: e => setUserName(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 159,\n                  columnNumber: 19\n                }, this), unameError && /*#__PURE__*/_jsxDEV(\"p\", {\n                  style: {\n                    color: \"red\"\n                  },\n                  children: \" Enter valid username.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 168,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                children: [/*#__PURE__*/_jsxDEV(Label, {\n                  for: \"firstName\",\n                  children: \"First Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 172,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Input, {\n                  id: \"firstName\",\n                  placeholder: \"Enter first name\",\n                  type: \"text\",\n                  value: firstName,\n                  onChange: e => setFirstName(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 173,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 17\n              }, this), fnameError && /*#__PURE__*/_jsxDEV(\"p\", {\n                style: {\n                  color: \"red\"\n                },\n                children: \"Only text data alloved.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                children: [/*#__PURE__*/_jsxDEV(Label, {\n                  for: \"lastName\",\n                  children: \"Last Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 186,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Input, {\n                  id: \"lastName\",\n                  placeholder: \"Enter last name\",\n                  type: \"text\",\n                  value: lastName,\n                  onChange: e => setLastName(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 187,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 17\n              }, this), lnameError && /*#__PURE__*/_jsxDEV(\"p\", {\n                style: {\n                  color: \"red\"\n                },\n                children: \"Only text data alloved.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                children: [/*#__PURE__*/_jsxDEV(Label, {\n                  for: \"userEmail\",\n                  children: \"Email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 201,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Input, {\n                  id: \"userEmail\",\n                  placeholder: \"Enter email\",\n                  type: \"email\",\n                  value: email,\n                  onChange: e => setEmail(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 202,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 17\n              }, this), emailError && /*#__PURE__*/_jsxDEV(\"p\", {\n                style: {\n                  color: \"red\"\n                },\n                children: \"Enter valid Email-id.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                children: [/*#__PURE__*/_jsxDEV(Label, {\n                  for: \"userPassword\",\n                  children: \"Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Input, {\n                  id: \"userPassword\",\n                  placeholder: \"password placeholder\",\n                  type: \"password\",\n                  value: pass,\n                  onChange: e => setPass(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 215,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 17\n              }, this), pwdError && /*#__PURE__*/_jsxDEV(\"p\", {\n                style: {\n                  color: \"red\"\n                },\n                children: \"Please enter min 6 digits password.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                children: [/*#__PURE__*/_jsxDEV(Label, {\n                  for: \"phoneNo\",\n                  children: \"Phone No.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 230,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Input, {\n                  id: \"phoneNo\",\n                  placeholder: \"Enter phone no\",\n                  type: \"number\",\n                  value: phoneNo,\n                  onChange: e => setPhoneNo(e.target.value) // required\n\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 231,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 17\n              }, this), phError && /*#__PURE__*/_jsxDEV(\"p\", {\n                style: {\n                  color: \"red\"\n                },\n                children: \"Please enter min 10 mobile no.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                children: [/*#__PURE__*/_jsxDEV(Label, {\n                  for: \"userAddress\",\n                  children: \"Address\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 245,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Input, {\n                  id: \"userAddress\",\n                  type: \"textarea\",\n                  value: address,\n                  onChange: e => setAddress(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 246,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 17\n              }, this), addressError && /*#__PURE__*/_jsxDEV(\"p\", {\n                style: {\n                  color: \"red\"\n                },\n                children: \"Address length should be Min 10 char reuired\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(Label, {\n                  for: \"\",\n                  children: \"Select Roll\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 257,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  value: category,\n                  onChange: item => {\n                    setCategory(item);\n                  },\n                  options: option // getOptionValue={(item) => item}\n                  // getOptionLabel={(item) => item}\n                  ,\n                  placeholder: category === {} ? \"Select Category\" : category.label,\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 258,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"\",\n                style: {\n                  marginLeft: \"13px\",\n                  marginBottom: \"20px\"\n                },\n                children: /*#__PURE__*/_jsxDEV(ReCAPTCHA, {\n                  className: \"col-sm-8\",\n                  sitekey: \"6LeIxAcTAAAAAJcZVRqyHh71UMIEGNQ_MXjiZKhI\",\n                  onChange: onChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 274,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Container, {\n                className: \"text-center\",\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  type: \"submit\",\n                  color: \"success\",\n                  children: \"Submit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 281,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  type: \"button\",\n                  onClick: reset,\n                  color: \"success\",\n                  children: \"reset\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 284,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RegisterScreen, \"fONtpjrtfMetv6G0ZCdUlU11eig=\", false, function () {\n  return [useNavigate, useDispatch, useSelector];\n});\n\n_c = RegisterScreen;\nexport default RegisterScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterScreen\");","map":{"version":3,"names":["React","useEffect","useState","ReCAPTCHA","useDispatch","useSelector","useNavigate","Button","Card","CardBody","CardHeader","Col","Container","Form","FormFeedback","FormGroup","Input","Label","Row","logout","register","onlyChar","onlyPhone","Select","RegisterScreen","navigate","userName","setUserName","firstName","setFirstName","lastName","setLastName","email","setEmail","pass","setPass","address","setAddress","category","setCategory","phoneNo","setPhoneNo","dispatch","userRegister","state","error","loading","userInfo","pwdError","setPwdError","phError","setPhError","unameError","setUnameError","fnameError","setFnameError","lnameError","setLnameError","emailError","setEmailError","addressError","setAddressError","flag","localStorage","clear","submitHandler","e","preventDefault","test","length","console","log","value","reset","option","label","Verifed","setVerifed","onChange","size","offset","target","color","item","marginLeft","marginBottom"],"sources":["C:/Users/SUSH/Desktop/Project Major/Project2/E-learning Backend+Frontend v1.1/frontend-elearning/frontend-elearning/src/screens/RegisterScreen.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport ReCAPTCHA from \"react-google-recaptcha\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardHeader,\n  Col,\n  Container,\n  Form,\n  FormFeedback,\n  FormGroup,\n  Input,\n  Label,\n  Row,\n} from \"reactstrap\";\nimport { logout, register } from \"../actions/userActions\";\nimport { onlyChar, onlyPhone } from \"../data/Regex\";\nimport Select from \"react-select\";\n\nfunction RegisterScreen() {\n  const navigate = useNavigate();\n\n  const [userName, setUserName] = useState(\"\");\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [pass, setPass] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [category, setCategory] = useState({});\n  const [phoneNo, setPhoneNo] = useState(\"\");\n\n  // const [message, setMessage] = useState(\"\");\n\n  const dispatch = useDispatch();\n\n  const userRegister = useSelector((state) => state.userRegister);\n  const { error, loading, userInfo } = userRegister;\n\n  const [pwdError, setPwdError] = useState(false);\n  const [phError, setPhError] = useState(false);\n  const [unameError, setUnameError] = useState(false);\n  const [fnameError, setFnameError] = useState(false);\n  const [lnameError, setLnameError] = useState(false);\n  const [emailError, setEmailError] = useState(false);\n  const [addressError, setAddressError] = useState(false);\n\n  var flag = true;\n  //   const [items, setItems] = useState([]);\n\n  // useEffect(() => {\n  //   const items = JSON.parse(localStorage.getItem('items'));\n  //   if (items) {\n  //    setItems(items);\n  //   }\n  // }, []);\n\n  useEffect(() => {\n    if (userInfo) {\n      localStorage.clear();\n      dispatch(logout());\n      navigate(\"/login\");\n    }\n  }, [userInfo, navigate]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n\n    if (!onlyChar.test(userName)) {\n      setUnameError(true);\n      flag = true;\n    }\n    if (!onlyChar.test(firstName)) {\n      setFnameError(true);\n      flag = true;\n    }\n    if (!onlyChar.test(lastName)) {\n      setLnameError(true);\n      flag = true;\n    }\n    if (pass.length < 6) {\n      setPwdError(true);\n      flag = true;\n    }\n    if (address.length < 25) {\n      setAddressError(false);\n      flag = true;\n    }\n\n    if (!onlyPhone.test(phoneNo)) {\n      setPhError(true);\n      flag = true;\n    } else {\n      flag = false;\n    }\n\n    console.log(\"flag\", flag);\n\n    if (flag === false) {\n      dispatch(\n        register(\n          userName,\n          firstName,\n          lastName,\n          email,\n          pass,\n          address,\n          phoneNo,\n          category.value\n        )\n      );\n    }\n    // setMessage(\"User Register Successfully\");\n  };\n\n  const reset = () => {\n    setUserName(\"\");\n    setFirstName(\"\");\n    setLastName(\"\");\n    setAddress(\"\");\n    setPass(\"\");\n    setEmail(\"\");\n    setCategory({});\n    setPhoneNo(\"\");\n\n    //err\n    setPhError(false);\n    setPwdError(false);\n    setFnameError(false);\n    setLnameError(false);\n    setUnameError(false);\n    setEmailError(false);\n    setAddressError(false);\n  };\n\n  var option = [\n    { value: 2, label: \"Instructor\" },\n    { value: 3, label: \"Student\" },\n  ];\n  const [Verifed,setVerifed]=useState(false);\n  function onChange(value) {\n    console.log(\"Captcha value:\", value);\n    setVerifed(true);\n  }\n  return (\n    <Container className=\"my-5\">\n      <Row className=\"pt-5\">\n        <Col sm={{ size: 6, offset: 3 }}>\n          <Card color=\"dark\" outline>\n            <CardHeader className=\"text-center\">\n              <h3>Register</h3>\n            </CardHeader>\n            <CardBody>\n              <Form onSubmit={submitHandler}>\n                <FormGroup>\n                  <Label for=\"firstName\">User Name</Label>\n                  <Input\n                    id=\"userName\"\n                    placeholder=\"Enter user name\"\n                    type=\"text\"\n                    value={userName}\n                    onChange={(e) => setUserName(e.target.value)}\n                   \n                  />\n                  {unameError && (\n                  <p style={{ color: \"red\" }}> Enter valid username.</p>\n                )}\n                </FormGroup>\n                <FormGroup>\n                  <Label for=\"firstName\">First Name</Label>\n                  <Input\n                    id=\"firstName\"\n                    placeholder=\"Enter first name\"\n                    type=\"text\"\n                    value={firstName}\n                    onChange={(e) => setFirstName(e.target.value)}\n                  />\n                </FormGroup>\n                {fnameError && (\n                  <p style={{ color: \"red\" }}>Only text data alloved.</p>\n                )}\n\n                <FormGroup>\n                  <Label for=\"lastName\">Last Name</Label>\n                  <Input\n                    id=\"lastName\"\n                    placeholder=\"Enter last name\"\n                    type=\"text\"\n                    value={lastName}\n                    onChange={(e) => setLastName(e.target.value)}\n                   \n                  />\n                </FormGroup>\n                {lnameError && (\n                  <p style={{ color: \"red\" }}>Only text data alloved.</p>\n                )}\n\n                <FormGroup>\n                  <Label for=\"userEmail\">Email</Label>\n                  <Input\n                    id=\"userEmail\"\n                    placeholder=\"Enter email\"\n                    type=\"email\"\n                    value={email}\n                    onChange={(e) => setEmail(e.target.value)}\n                  />\n                </FormGroup>\n                {emailError && (\n                  <p style={{ color: \"red\" }}>Enter valid Email-id.</p>\n                )}\n                <FormGroup>\n                  <Label for=\"userPassword\">Password</Label>\n                  <Input\n                    id=\"userPassword\"\n                    placeholder=\"password placeholder\"\n                    type=\"password\"\n                    value={pass}\n                    onChange={(e) => setPass(e.target.value)}\n                  />\n                </FormGroup>\n                {pwdError && (\n                  <p style={{ color: \"red\" }}>\n                    Please enter min 6 digits password.\n                  </p>\n                )}\n\n                <FormGroup>\n                  <Label for=\"phoneNo\">Phone No.</Label>\n                  <Input\n                    id=\"phoneNo\"\n                    placeholder=\"Enter phone no\"\n                    type=\"number\"\n                    value={phoneNo}\n                    onChange={(e) => setPhoneNo(e.target.value)}\n                    // required\n                  />\n                </FormGroup>\n                {phError && (\n                  <p style={{ color: \"red\" }}>Please enter min 10 mobile no.</p>\n                )}\n\n                <FormGroup>\n                  <Label for=\"userAddress\">Address</Label>\n                  <Input\n                    id=\"userAddress\"\n                    type=\"textarea\"\n                    value={address}\n                    onChange={(e) => setAddress(e.target.value)}\n                  />\n                </FormGroup>\n                {addressError && (\n                  <p style={{ color: \"red\" }}>Address length should be Min 10 char reuired</p>\n                )}\n                <>\n                  <Label for=\"\">Select Roll</Label>\n                  <Select\n                    value={category}\n                    onChange={(item) => {\n                      setCategory(item);\n                    }}\n                    options={option}\n                    // getOptionValue={(item) => item}\n                    // getOptionLabel={(item) => item}\n                    placeholder={\n                      category === {} ? \"Select Category\" : category.label\n                    }\n                    required={true}\n                  />\n                </>\n                \n                <div className=\"\" style={{marginLeft:\"13px\",marginBottom:\"20px\"}} >\n                        <ReCAPTCHA className=\"col-sm-8\"\n                                sitekey=\"6LeIxAcTAAAAAJcZVRqyHh71UMIEGNQ_MXjiZKhI\"\n                                onChange={onChange}\n                        />\n                    </div>\n                   \n                <Container className=\"text-center\">\n                  <Button type=\"submit\" color=\"success\" >\n                    Submit\n                  </Button>\n                  <Button type=\"button\" onClick={reset} color=\"success\">\n                    reset\n                  </Button>\n                </Container>\n              </Form>\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default RegisterScreen;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}